#網址:https://www.tpex.org.tw/zh-tw/mainboard/trading/realtime/broker-vol.html  以下是我想要顯示的樣子長這樣
#【即時訊息】 
#3323加百裕
#    券商    買張    賣張   淨買張
#1  元大  3697  2187        1510
#2  國泰  1029   489         540
#3  永豐  1187   682         505
#4  華南   824   527         297
#5  群益   672   566         106
#6  星洲   609   720        -111
#7  統一   588   908        -320
#8  國票   189  1414       -1225
#9  富邦  1700  3239       -1539
#10  凱基  1487  3196      -1709

from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager
import pandas as pd
from datetime import datetime
import time

# 使用 webdriver-manager 自動下載和管理 chromedriver
service = Service("C:/Users/USER/Desktop/chromedriver-win64/chromedriver.exe")
driver = webdriver.Chrome(service=service)

# 打開網頁
url = "https://www.tpex.org.tw/zh-tw/mainboard/trading/realtime/broker-vol.html"
driver.get(url)

# 初始化數據列表
stocks = []
brokers = []
buys = []
sells = []

# 遍歷所有頁面
for page in range(1, 31):  # 假設有30頁
    # 等待頁面加載並找到包含數據的元素
    WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located((By.CSS_SELECTOR, "td.groupTitle")))
    stock_elements = driver.find_elements(By.CSS_SELECTOR, "td.groupTitle")
    broker_elements = driver.find_elements(By.CSS_SELECTOR, "td:nth-child(3)")
    buy_elements = driver.find_elements(By.CSS_SELECTOR, "td:nth-child(4)")
    sell_elements = driver.find_elements(By.CSS_SELECTOR, "td:nth-child(5)")

    # 打印提取的數據長度以進行調試
    print(f"第 {page} 頁 - stocks: {len(stock_elements)}, brokers: {len(broker_elements)}, buys: {len(buy_elements)}, sells: {len(sell_elements)}")

    # 提取數據
    stocks.extend([element.text for element in stock_elements for _ in range(10)])  # 重複股票代號以匹配其他列表的長度
    brokers.extend([element.text for element in broker_elements])
    buys.extend([int(element.text) for element in buy_elements])
    sells.extend([int(element.text) for element in sell_elements])

    # 檢查數據列表長度是否一致
    if not (len(stocks) == len(brokers) == len(buys) == len(sells)):
        print(f"數據列表長度不一致：第 {page} 頁")
        print(f"stocks: {len(stocks)}, brokers: {len(brokers)}, buys: {len(buys)}, sells: {len(sells)}")
        break

    # 點擊下一頁按鈕
    try:
        next_button = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, "a.next")))
        next_button.click()
    except:
        print(f"無法找到第 {page} 頁的下一頁按鈕")
        break

    # 等待頁面加載
    time.sleep(4)

# 計算淨買張
net_buys = [buy - sell for buy, sell in zip(buys, sells)]

# 創建 DataFrame
data = {
    "股票代號": stocks,
    "券商": brokers,
    "買張": buys,
    "賣張": sells,
    "淨買張": net_buys
}
df = pd.DataFrame(data)

# 根據淨買張排序
df_sorted = df.sort_values(by="淨買張", ascending=False)

# 獲取當前日期
current_date = datetime.now().strftime("%Y-%m-%d")

# 生成訊息
message = f"【即時訊息】\n券差通知 - {current_date}\n"
for index, row in df_sorted.iterrows():
    message += f"※ {row['股票代號']} - {row['券商']} - 買張: {row['買張']} - 賣張: {row['賣張']} - 淨買張: {row['淨買張']}\n"

print(message)

